basePath: /api/v1
definitions:
  domain.CalculateTotalResponse:
    properties:
      total_cost:
        example: 4800
        type: integer
    type: object
  domain.CreateSubscriptionRequest:
    properties:
      end_date:
        example: 12-2025
        type: string
      price:
        example: 400
        minimum: 0
        type: integer
      service_name:
        example: Yandex Plus
        type: string
      start_date:
        example: 07-2025
        type: string
      user_id:
        example: 60601fee-2bf1-4721-ae6f-7636e79a0cba
        type: string
    required:
    - price
    - service_name
    - start_date
    - user_id
    type: object
  domain.ErrorResponse:
    properties:
      error:
        example: invalid request
        type: string
    type: object
  domain.Subscription:
    properties:
      created_at:
        example: "2025-10-23T15:04:05Z"
        type: string
      end_date:
        example: 12-2025
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      price:
        example: 400
        minimum: 0
        type: integer
      service_name:
        example: Yandex Plus
        type: string
      start_date:
        example: 07-2025
        type: string
      updated_at:
        example: "2025-10-23T15:04:05Z"
        type: string
      user_id:
        example: 60601fee-2bf1-4721-ae6f-7636e79a0cba
        type: string
    required:
    - price
    - service_name
    - start_date
    - user_id
    type: object
  domain.SuccessResponse:
    properties:
      message:
        example: success
        type: string
    type: object
  domain.UpdateSubscriptionRequest:
    properties:
      end_date:
        example: 12-2025
        type: string
      price:
        example: 400
        type: integer
      service_name:
        example: Yandex Plus
        type: string
      start_date:
        example: 07-2025
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
  description: REST API для управления онлайн-подписками пользователей
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Subscription Service API
  version: "1.0"
paths:
  /subscriptions:
    get:
      consumes:
      - application/json
      description: Возвращает список подписок с возможностью фильтрации
      parameters:
      - description: ID пользователя
        format: uuid
        in: query
        name: user_id
        type: string
      - description: Название сервиса
        in: query
        name: service_name
        type: string
      - default: 100
        description: Лимит записей
        in: query
        name: limit
        type: integer
      - default: 0
        description: Смещение
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Subscription'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Получить список подписок
      tags:
      - subscriptions
    post:
      consumes:
      - application/json
      description: Создает новую запись о подписке пользователя
      parameters:
      - description: Данные подписки
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/domain.CreateSubscriptionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Subscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Создать новую подписку
      tags:
      - subscriptions
  /subscriptions/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет подписку по её идентификатору
      parameters:
      - description: ID подписки
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Удалить подписку
      tags:
      - subscriptions
    get:
      consumes:
      - application/json
      description: Возвращает информацию о подписке по её идентификатору
      parameters:
      - description: ID подписки
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Subscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Получить подписку по ID
      tags:
      - subscriptions
    put:
      consumes:
      - application/json
      description: Обновляет существующую подписку
      parameters:
      - description: ID подписки
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Обновляемые данные
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateSubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Subscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Обновить подписку
      tags:
      - subscriptions
  /subscriptions/calculate:
    get:
      consumes:
      - application/json
      description: Рассчитывает суммарную стоимость подписок за период с фильтрацией
      parameters:
      - description: ID пользователя
        format: uuid
        in: query
        name: user_id
        type: string
      - description: Название сервиса
        in: query
        name: service_name
        type: string
      - description: Начало периода
        format: MM-YYYY
        in: query
        name: start_period
        required: true
        type: string
      - description: Конец периода
        format: MM-YYYY
        in: query
        name: end_period
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.CalculateTotalResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Рассчитать суммарную стоимость
      tags:
      - subscriptions
schemes:
- http
- https
swagger: "2.0"
