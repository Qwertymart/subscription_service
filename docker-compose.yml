version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: subscription_db
    environment:
      POSTGRES_DB: ${DB_NAME:-subscriptions}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  migrate:
    image: migrate/migrate
    container_name: subscription_migrate
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgres://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@postgres:5432/${DB_NAME:-subscriptions}?sslmode=disable",
      "up"
    ]
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: subscription_service
    depends_on:
      migrate:
        condition: service_completed_successfully
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-subscriptions}
      DB_SSLMODE: disable
      SERVER_PORT: 8080
      LOG_LEVEL: ${LOG_LEVEL:-info}
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
